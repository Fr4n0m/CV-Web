---
const { lang } = Astro.props;

const languages = ["es", "en"] as const;

type Language = (typeof languages)[number];

function updateLanguageUrl(
  currentLang: Language, // Idioma actual.
  targetLang: Language // Idioma al que se quiere cambiar.
): string {
  // Para español (`es`), la ruta base es `/`.
  if (currentLang === "es" && targetLang === "en") {
    return "/en";
  }
  // Para inglés (`en`), la ruta base es `/en`.
  if (currentLang === "en" && targetLang === "es") {
    return "/";
  }
  // Si no hay cambios (idioma actual), devolvemos la misma URL.
  return currentLang === "es" ? "/" : "/en";
}
---

<section>
  <nav>
    <ul>
      {
        languages.map((l) => {
          const url = updateLanguageUrl(lang as Language, l);
          return (
            <li>
              <a href={url} class={l === lang ? "active" : ""}>
                {l.toUpperCase()}
              </a>
            </li>
          );
        })
      }
    </ul>
  </nav>
</section>

<style>
  section {
    position: fixed;
    top: 10px;
    right: 10px;
    font-size: 0.8rem;
    padding: 0.5em;
    background-color: #f1f1f1;
    border-radius: 5px;
  }

  ul {
    display: flex;
    gap: 0.5em;
  }

  li {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition: all 0.3s ease;
  }

  li:hover {
    background: #ddd;
    border: 1px solid #ddd;
  }

  li.active {
    font-weight: 600;
    color: #333;
    background-color: #eee;
    border: 1px solid #ddd;
    cursor: default;
  }
</style>
